name: "Tag release"

# creating a release creates a tag as well; this expects the release to exist
on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BRANCH: "master" # for webpack
      NODE_OPTIONS: "--max-old-space-size=4096 --max_old_space_size=4096"

    steps:
      - name: "Checkout catalog-ui (${{ github.ref }})"
        uses: actions/checkout@v2
      - name: "Checkout approval-ui (RedHatInsights/approval-ui)"
        uses: actions/checkout@v2
        with:
          repository: RedHatInsights/approval-ui
          path: approval
      - name: "Set RELEASE_TAG"
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          RELEASE_TAG=`sed 's/^refs\/tags\///' <<< $GITHUB_REF`
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV
      - name: "Install node 14"
        uses: actions/setup-node@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          node-version: "14"
      - name: "Cache ~/.npm"
        uses: actions/cache@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.GITHUB_REF }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.GITHUB_REF }}-
            ${{ runner.os }}-node-
      - name: "Build a tar"
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          npm ci || npm install
          npm run build:standalone
          cd ./approval
          npm ci || npm install
          npm run build:standalone
          cd ..
          cp -r ./approval/dist ./dist/approval
          tar -C dist/ -czvf catalog-ui.tar.gz .
      - name: "Release"
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          gh release upload "$RELEASE_TAG" "$RELEASE_FILE" --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_FILE: 'catalog-ui.tar.gz'
